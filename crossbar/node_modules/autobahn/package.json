{
  "_args": [
    [
      {
        "raw": "autobahn",
        "scope": null,
        "escapedName": "autobahn",
        "name": "autobahn",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/Pablo/Universidad/TFG/Ewetasker_Crossbar/crossbar/crossbar"
    ]
  ],
  "_from": "autobahn@latest",
  "_id": "autobahn@18.3.1",
  "_inCache": true,
  "_location": "/autobahn",
  "_nodeVersion": "6.10.3",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/autobahn_18.3.1_1521208506026_0.7974941667924405"
  },
  "_npmUser": {
    "name": "oberstet",
    "email": "tobias.oberstein@tavendo.de"
  },
  "_npmVersion": "3.10.10",
  "_phantomChildren": {},
  "_requested": {
    "raw": "autobahn",
    "scope": null,
    "escapedName": "autobahn",
    "name": "autobahn",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/autobahn/-/autobahn-18.3.1.tgz",
  "_shasum": "d32d697c1498161ef238f2a14437b2043bae2f9a",
  "_shrinkwrap": null,
  "_spec": "autobahn",
  "_where": "/Users/Pablo/Universidad/TFG/Ewetasker_Crossbar/crossbar/crossbar",
  "author": {
    "name": "Crossbar.io Technologies GmbH"
  },
  "browser": {
    "ws": false,
    "lib/transport/rawsocket.js": false,
    "cbor": false
  },
  "bugs": {
    "url": "https://github.com/crossbario/autobahn-js/issues"
  },
  "dependencies": {
    "bufferutil": ">= 1.2.1",
    "cbor": ">= 3.0.0",
    "crypto-js": ">= 3.1.8",
    "msgpack5": ">= 3.6.0",
    "tweetnacl": ">= 0.14.3",
    "utf-8-validate": ">= 1.2.1",
    "when": ">= 3.7.7",
    "ws": ">= 1.1.4"
  },
  "description": "An implementation of The Web Application Messaging Protocol (WAMP).",
  "devDependencies": {
    "browserify": ">= 13.1.1",
    "deep-equal": ">= 1.0.1",
    "google-closure-compiler": "^20170218.0.0",
    "nodeunit": ">= 0.10.2"
  },
  "directories": {},
  "dist": {
    "shasum": "d32d697c1498161ef238f2a14437b2043bae2f9a",
    "tarball": "https://registry.npmjs.org/autobahn/-/autobahn-18.3.1.tgz",
    "fileCount": 98,
    "unpackedSize": 397185
  },
  "engines": {
    "node": ">= 4.2.6"
  },
  "gitHead": "0430d19d8553f1367afe985d969139c6ed79f448",
  "homepage": "https://github.com/crossbario/autobahn-js#readme",
  "keywords": [
    "WAMP",
    "WebSocket",
    "RPC",
    "PubSub"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "goeddea",
      "email": "alexander.goedde@tavendo.de"
    },
    {
      "name": "oberstet",
      "email": "tobias.oberstein@tavendo.de"
    }
  ],
  "name": "autobahn",
  "optionalDependencies": {
    "bufferutil": ">= 1.2.1",
    "utf-8-validate": ">= 1.2.1"
  },
  "readme": "# **Autobahn**|JS\n\nWAMP for Browsers and NodeJS.\n\n[![NPM](https://nodei.co/npm/autobahn.png?downloads=true&downloadRank=true&stars=true)](https://nodei.co/npm/autobahn/)\n\n[![Docker Hub](https://img.shields.io/badge/docker-ready-blue.svg)](https://hub.docker.com/r/crossbario/autobahn-js/)\n\n---\n\n**Autobahn**|JS is a subproject of the [Autobahn project](http://autobahn.ws/) and provides an open-source implementation of the **[Web Application Messaging Protocol V2](http://wamp.ws/)** in JavaScript under the [MIT license](/LICENSE).\n\nWAMP provides asynchronous **Remote Procedure Calls** and **Publish & Subscribe** for applications in *one* protocol running over [WebSocket](http://tools.ietf.org/html/rfc6455) (and fallback transports for old browsers).\n\n**Autobahn**|JS runs on both **Web browsers** and **[Node.js](http://nodejs.org/)**.\n\n## What can I do with this stuff?\n\n**Autobahn|JS** makes **distributed, realtime Web applications easy**: it provides the infrastructure for both **distributing live updates** to all connected clients (using the PubSub messaging pattern) and for **calling remote procedures** in different backend components (using RPC).\n\nIt is ideal for distributed, multi-client and server applications, such as multi-user database-drive business applications, real-time charts, sensor networks (IoT), instant messaging or MMOGs (massively multi-player online games).\n\nThe protocol that **Autobahn|JS** uses, WAMP, enables application architectures with application code **distributed freely across processes and devices** according to functional aspects. All WAMP clients are equal in that they can publish events and subscribe to them, can offer a procedure for remote calling and call remote procedures.\n\nSince WAMP implementations exist for **multiple languages**, this extends beyond JavaScript clients: WAMP applications can be polyglot. Application components can be implemented in a language and run on a device which best fit the particular use case. Applications can span the range from embedded IoT sensors right to mobile clients or the browser - using the same protocol.\n\n## Show me some code\n\nThe following example implements all four roles that **Autobahn**|JS offers\n\n * Publisher\n * Subscriber\n * Caller (calls a remote procedure)\n * Callee (offers a remote procedure)\n\n**The code runs unaltered in the browser or Node.js!**\n\n```javascript\ntry {\n   // for Node.js\n   var autobahn = require('autobahn');\n} catch (e) {\n   // for browsers (where AutobahnJS is available globally)\n}\n\nvar connection = new autobahn.Connection({url: 'ws://127.0.0.1:9000/', realm: 'realm1'});\n\nconnection.onopen = function (session) {\n\n   // 1) subscribe to a topic\n   function onevent(args) {\n      console.log(\"Event:\", args[0]);\n   }\n   session.subscribe('com.myapp.hello', onevent);\n\n   // 2) publish an event\n   session.publish('com.myapp.hello', ['Hello, world!']);\n\n   // 3) register a procedure for remoting\n   function add2(args) {\n      return args[0] + args[1];\n   }\n   session.register('com.myapp.add2', add2);\n\n   // 4) call a remote procedure\n   session.call('com.myapp.add2', [2, 3]).then(\n      function (res) {\n         console.log(\"Result:\", res);\n      }\n   );\n};\n\nconnection.open();\n```\n\nFeatures\n--------\n\n* supports WAMP v2, works with any WAMP server\n* works both in the browser and Node.js\n* provides asynchronous RPC and PubSub messaging patterns\n* uses WebSocket or HTTP long-poll as transport\n* easy to use Promise-based API\n* pluggable promises/deferreds: use [when.js](https://github.com/cujojs/when)  (built-in), [jQuery](http://api.jquery.com/category/deferred-object/) , [Dojo](http://dojotoolkit.org/reference-guide/1.7/dojo/Deferred.html), ECMA Script 6 or others\n* no dependencies\n* small size (244kB source, 111kB minified, 33kB compressed)\n* Open-Source (MIT License)\n\n\n## Get it\n\n### Browser Development\n\nThe *latest* built release of AutobahnJS can be retrieved by cloning [this](https://github.com/crossbario/autobahn-js-built) repository. You can then host the library wherever you need to.\n\nThis also contains a complete history of previous releases and can be used with **[Bower](http://bower.io/)** to:\n\n\tbower install autobahn\n\n\n### NodeJS Development\n\nAutobahnJS is available via the Node package manager [here](https://www.npmjs.org/package/autobahn). To install:\n\n\tnpm install autobahn\n\n#### NodeJS and ws version\n\nAutobahnJS works with both v1 and v2 of the ws library, and you should use the ws version depending on the NodeJS version you use.\n\nIf you run NodeJS v4.5.0 or later, you can use the ws library v2:\n\n```console\nnpm install ws@2`\n```\n\nIf you run an earlier version of NodeJS, use must use the ws library v1:\n\n```console\nnpm install ws@1`\n```\n\n**Details**\n\nAutobahnJS currently strives for support of NodeJS v4.2.6 or later. The reason is that this is the version that currently ships with Ubuntu 16.04 LTS.\n\nOn NodeJS, we need the [ws library](https://github.com/websockets/ws/) for WebSocket support, as different from browsers, NodeJS does not come with a native implementation.\n\nHowever, the ws library v2 or later is incompatible with NodeJS earlier than v4.5.0. See [here](http://stackoverflow.com/a/42331959/884770) and [here](https://github.com/websockets/ws/issues/989).\n\nRather than dropping support for NodeJS v4 (and hence for the system NodeJS version of Ubuntu), we use ws v1 as a dependency in `package.json`, but allow any version of ws to be used.\n\n#### Usage on Ubuntu\n\nAs mentioned above, Ubuntu 16.04 ships with Node 4.2, which only works with ws v1. To use that, do the following:\n\n```console\nsudo npm install -g ws@1 autobahn\nexport NODE_PATH=/usr/local/lib/node_modules/\n```\n\n> This first install ws at version 1, and then installs Autobahn. When you install Autobahn without installing ws first, the latest ws version will be installed as a dependency of Autobahn, hence ws v2, and that won't work.\n\nTo use a current Node with ws v2, do the following:\n\n```console\ncd ~\nwget https://nodejs.org/dist/v6.10.1/node-v6.10.1-linux-x64.tar.xz\ntar xvf node-v6.10.1-linux-x64.tar.xz\nexport PATH=${HOME}/node-v6.10.1-linux-x64/bin:${PATH}\nexport NODE_PATH=${HOME}/node-v6.10.1-linux-x64/lib/node_modules\n```\n\nThis should give you:\n\n```console\noberstet@office-corei7:~$ which node\n/home/oberstet/node-v6.10.1-linux-x64/bin/node\noberstet@office-corei7:~$ which npm\n/home/oberstet/node-v6.10.1-linux-x64/bin/npm\noberstet@office-corei7:~$ node -v\nv6.10.1\noberstet@office-corei7:~$ npm -v\n3.10.10\n```\n\nNow you can install Autobahn:\n\n```console\nnpm install -g autobahn\n```\n\nand check\n\n```console\noberstet@office-corei7:~$ node -e \"var autobahn = require('autobahn'); console.log(autobahn.version);\"\n0.12.0\n```\n\n## More information\n\nFor more information, take a look at the [project documentation](/doc/README.md). This provides:\n\n* [a quick 'Getting Started'](/doc/getting-started.md)\n* [a basic introduction to programming with Autobahn|JS](/doc/programming.md)\n* [a list of all examples in this repo](/doc/examples.md)\n* [a full API reference](/doc/reference.md)\n\n\n## Get in touch\n\nGet in touch on IRC `#autobahn` on `chat.freenode.net` or the [mailing list](http://groups.google.com/group/autobahnws).\n\n\n## Acknowledgements\n\n**Autobahn**|JS includes code from the following open-source projects\n\n  * [when.js](https://github.com/cujojs/when)\n  * [ws: a node.js websocket library](https://github.com/einaros/ws)\n  * [CryptoJS](http://code.google.com/p/crypto-js/)\n\nSpecial thanks to the [Coders with an Unhealthy Javascript Obsession](http://cujojs.com/) for creating *when.js - A lightweight Promise and when() implementation, plus other async goodies.*\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/crossbario/autobahn-js.git"
  },
  "scripts": {
    "test": "nodeunit test/test.js"
  },
  "version": "18.3.1"
}
